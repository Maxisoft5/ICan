@using ICan.Common.Models.Opt;
@model WarehouseStateModel
@{
	var title = "Состояние склада тетрадей";
	ViewData["Title"] = title;
}

<h2 style="padding: 0 30%"> @title @DateTime.Now.ToString()</h2>
<hr />

   <style>
 	table tbody  tr {
		 line-height:0.1;
 	}
 </style>

@if (Model != null)
{	 
<div style="padding: 0 30%">
	<a class="wh-state-download" download="Состояние склада.xlsx"
	   href="@Url.Action("ExportCalculateWhj")">Выгрузить состояние склада</a>
	<table class="table table-responsive-md">
		<thead>
			<tr>
				<th scope="col">Товар</th>
				<th scope="col" style="text-align:right;">Количество </th>
			</tr>
		</thead>
		<tbody>
			@{ var rowNum = 0;}
			@foreach (var group in Model.Items)
			{
				<tr>
					<td colspan="3" style="cursor: pointer; background-color: #dee2e6"
						data-toggle="collapse" aria-expanded="true"
						data-target=".multi-collapse@(group.Key.ProductSeriesId)">
						@group.Key.Name
					</td>
				</tr>
				foreach (var item in group.Value)
				{
					<tr class="multi-collapse@(group.Key.ProductSeriesId) collapse show  @(item.Enabled ? "" : "disabled")"
						aria-expanded="true" style="width:98%;">
						<td>
							@Html.DisplayFor(modelItem => item.DisplayName)
							<a asp-action="ProductState" asp-route-productId="@item.ProductId" class="buttons" target="_blank"><i class="fas fa-warehouse"></i></a>

						</td>
						<td style="text-align:right;">
							@Html.DisplayFor(modelItem => item.Amount)
						</td>
					</tr>
					rowNum++;
				}

			}
		</tbody>
	</table>
</div>
}
else
{
	<p>
		<span>Нет данных для отображения</span>
	</p>
}

<div>
	<a asp-action="Index">Назад к списку</a>
</div>