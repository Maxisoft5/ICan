@using ICan.Common.Models.Enums
@model ICan.Common.Models.Opt.AssemblyModel

@{ var actionType = (ActionType)ViewBag.Action;
	bool.TryParse(ViewData["IsAdmin"]?.ToString(), out var isAdmin);
	bool.TryParse(ViewData["IsOperator"]?.ToString(), out var isOperator);
	bool.TryParse(ViewData["IsStorekeeper"]?.ToString(), out var isStoreKeeper);
	bool.TryParse(ViewData["IsAssembler"]?.ToString(), out var isAssembler);
	var products = (IEnumerable<SelectListItem>)ViewData["ProductId"];
	var series = (IEnumerable<SelectListItem>)ViewData["ProductSeries"];
	string action, title;
	if (actionType == ActionType.Creation)
	{
		action = "Create";
		title = "Создание сборки";
	}
	else
	{
		action = "Edit";
		title = "Редактирование сборки";
	}
	ViewData["Title"] = title;
}

<h2>@title</h2>

<hr />
<span class="alert-danger">@TempData["ErrorMessage"]</span>
<span class="text-success">@TempData["StatusMessage"]</span>


<form asp-action="@action">
	<div class="row">
		<div class="col-md-4">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input asp-for="AssemblyType" hidden />
			<div class="form-group">
				<label asp-for="Date" class="control-label"></label>
				<sup><i class="fas fa-asterisk" style="font-size: 10px; color: red"></i></sup>
				@if (actionType == ActionType.Creation)
				{
					@Html.TextBoxFor(m => m.Date, "{0:dd.MM.yyyy HH:mm}", new { @type = "datetime", @class = "form-control" })
					<span asp-validation-for="Date" class="text-danger"></span> }
				else
				{
					<br />
					<span>@Model.Date.ToString("dd.MM.yyyy HH:mm")</span>
					<input asp-for="Date" hidden />
				}
			</div>
			<div class="form-group">
				<label class="control-label">Серия</label>
				<select asp-for="ProductSeriesId" class = "form-control productSeries-list"
						asp-items="series">
					<option value="0">-</option>
				</select>
			</div>
			<div class="form-group">
				<label asp-for="ProductId" class="control-label"></label>
				<sup><i class="fas fa-asterisk" style="font-size: 10px; color: red"></i></sup>
				@if (actionType == ActionType.Creation)
				{
					@Html.DropDownListFor(model => model.ProductId, products, null, new { @class = "form-control product-list" })
				}
				else
				{
					<input type="text" class="form-control" value="@Model.ProductDisplayName" readonly />
					<input type="hidden" asp-for="ProductId" />
					<input type="hidden" asp-for="ProductDisplayName" />
				}
				<span asp-validation-for="ProductId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Amount" class="control-label"></label>
				<sup><i class="fas fa-asterisk" style="font-size: 10px; color: red"></i></sup>
				<input asp-for="Amount" class="form-control" />
				<span asp-validation-for="Amount" class="text-danger"></span>
			</div>

			<div class="form-group">
				<input type="submit" value="Сохранить" class="btn btn-default" />
			</div>
		</div>
		<div class="col-md-4 semiprods-orders">
			@if (Model.SemiproductsWithPrintOrders != null && Model.SemiproductsWithPrintOrders.Any())
			{
				var counter = 0;

				var selectedPinrOrderSemiproducts = Model.AssemblySemiproducts?.Select(item => item.PrintOrderSemiproductId);
				foreach (var printOrderSemiproducts in Model.SemiproductsWithPrintOrders)
				{
					var keyFieldName = @printOrderSemiproducts.Key.SemiproductTypeId == (int)ICan.Common.Models.Opt.SemiProductType.Stickers
						? "NotchOrderId"
						: "PrintOrderSemiproductId";
					<div class="row">
						<div class="col-10">
							<div class="form-group">
								<label class="control-label semiproductName">@printOrderSemiproducts.Key.SemiproductTypeName</label>
								<select class="form-control list-orders[@counter]"
										name="AssemblySemiproducts[@counter].@keyFieldName">
									@foreach (var order in printOrderSemiproducts.Value)
									{
										var selectedItem = selectedPinrOrderSemiproducts?.Contains(order.Key) ?? false;

										<option value="@order.Key" selected="@selectedItem">@order.Value</option>
									}
								</select>
							</div>
						@{counter++;}
						</div>
						<div class="col-2"></div>
					</div>
				}

			}
		</div>
	</div>
</form>

<div>
	<a asp-action="Index">Назад к списку</a>
</div>
<script src="~/js/assembly.js" asp-append-version="true"></script>
@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
