@model ICan.Common.Models.Opt.NotchOrderModel
@{ var title = "Редактирование заказа надсечки";
	ViewData["Title"] = title;
	var canEditPrintOrders = Model.NotchOrderIncomings == null || !Model.NotchOrderIncomings.Any(); }

<h2>@title</h2>

<hr />

<span class="alert-danger">@TempData["ErrorMessage"]</span>
<span class="text-success">@TempData["StatusMessage"]</span>

<form asp-action="Edit" method="post">
	<div class="row">
		<div class="col-5">
			<input asp-for="NotchOrderId" class="form-control notchorder-id" type="hidden" />
			<div class="form-group">
				<label asp-for="NotchOrderNumber" class="control-label"></label>
				<sup><i class="fas fa-asterisk" style="font-size: 10px; color: red"></i></sup>
				<input asp-for="NotchOrderNumber" class="form-control" />
				<span class="text-danger field-validation-error" data-valmsg-for="NotchOrderNumber" data-valmsg-replace="true"> </span>
			</div>

			<div class="form-group">
				<label asp-for="OrderDate" class="control-label"></label>
				@Html.TextBoxFor(Model => Model.OrderDate, "{0:dd.MM.yyyy HH:mm}", new { @type = "datetime", @class = "form-control" })
			</div>
			<div class="form-group">
				<label asp-for="OrderSum" class="control-label"></label><br />
				<input asp-for="OrderSum" class="form-control" type="number" step="0.01" />
			</div>

			<div class="form-group">
				<label asp-for="ShipmentDate" class="control-label"></label>
				<input asp-for="ShipmentDate" type="date" class = "form-control" />
			</div>

			<div class="form-group">
				<label asp-for="ShipmentSum" class="control-label"></label><br />
				<input asp-for="ShipmentSum" class="formatted-number form-control" type="number" step="0.01" />
				<span class="text-danger field-validation-error" data-valmsg-for="OrderSum" data-valmsg-replace="true"> </span>
			</div>

			<div class="form-group">
				<input type="button" value="Сохранить" class="btn btn-default save-button" />
			</div>
			<div>
				<a href="@Url.Action("Index")">Назад</a>
			</div>
		</div>
		<div class="col-7">
			<div class="common-list-notch-order-stickers">
				<div class="form-group">
					<label class="control-label">Наклейки</label>
				</div>
				@if (canEditPrintOrders)
				{
					<button class="btn btn-link add-stickers" type="button" style="margin-bottom: 10px">Добавить наклейки</button>}
					@if (Model.NotchOrderItems != null && Model.NotchOrderItems.Any())
					{
						<div class="existing-notch-order-stickers">
							@for (var i = 0; i < Model.NotchOrderItems.Count; i++)
							{
								<div class="row notch-order-print-order">
									<div class="col-11">
										<input type="hidden" class="notch-order-item-id"
											   name="NotchOrderItems[@i].NotchOrderItemId"
											   value="@Model.NotchOrderItems[i].NotchOrderItemId" />
										<input type="hidden" class="existing-print-order-id print-order-id"
											   name="NotchOrderItems[@i].PrintOrderId"
											   value="@Model.NotchOrderItems[i].PrintOrderId" />
										<span>@Model.NotchOrderItems[i].PrintOrder.DisplayName</span>
									</div>
									<div class="col-1 center-items">
										@if (canEditPrintOrders)
										{
											<a href="#" class="delete-notch-order-print-order-id">
												<i class="index far fa-times-circle" style="color:rgb(0, 123, 255)"></i>
											</a>
										}
									</div>
								</div>
							}
						</div>
					}
					<div class="added-notch-order-stickers">
					</div>
			</div>
			<div class="list-notch-order-incomings" style="margin-top:50px">
				<div class="form-group">
					<label class="control-label">Приход</label>
				</div>
			</div>
			<button class="btn btn-link add-notch-order-incoming" type="button">Добавить приход</button>
			@if (Model.NotchOrderIncomings != null && Model.NotchOrderIncomings.Any())
			{
				for (var i = 0; i < Model.NotchOrderIncomings.Count; i++)
				{
					var incoming = Model.NotchOrderIncomings[i];
					<div class="row order-income" data-notch-order-incoming-id="@(incoming.NotchOrderIncomingId)">
						<input type="hidden" name="NotchOrderIncomings[@i].NotchOrderIncomingId"
											   value="@incoming.NotchOrderIncomingId" />
						<div class="col-2">
							@Model.NotchOrderIncomings[i].IncomingDate.ToShortDateString()
						</div>
						<div class="col-9">
							@if (Model.NotchOrderIncomings[i].IncomingItems != null &&
                            Model.NotchOrderIncomings[i].IncomingItems.Any())
                            {
                                for (var incomingItemIndex = 0; incomingItemIndex < Model.NotchOrderIncomings[i].IncomingItems.Count; incomingItemIndex++)
                                {
                                    var incomingItem = @Model.NotchOrderIncomings[i].IncomingItems[incomingItemIndex];
                                    var isAssembledChcked = incomingItem.IsAssembled ? "checked" : string.Empty;
									<div class="row">
										<input type="hidden" name="NotchOrderIncomings[@i].IncomingItems[@incomingItemIndex].NotchOrderIncomingItemId"
                                                   value="@incomingItem.NotchOrderIncomingItemId" />
                                        <div class="col-1">                                            
                                            <input type="checkbox" name="NotchOrderIncomings[@i].IncomingItems[@incomingItemIndex].IsAssembled" class="is-assembled-controll" data-incoming-item-id="@incomingItem.NotchOrderIncomingItemId"  value="@(incomingItem.IsAssembled ? "true" : "false")" @isAssembledChcked/>
                                        </div>
										<div class="col-8">
											@incomingItem.NotchOrderSemiproduct
										</div>
										<div class="col-3">
											@incomingItem.Amount
										</div>
									</div>
								}
							}
						</div>
						@if (!Model.IsUsed)
						{
							<div class="col-1">
								<a href="#" class="delete-notch-incoming" data-notch-order-incoming-id="@(incoming.NotchOrderIncomingId)">
									<i class="index far fa-times-circle" style="color:rgb(0, 123, 255)"></i>
								</a>
							</div>
						}
					</div>
				}
			}
		</div>
	</div>
</form>

<div class="modal fade add-incoming-modal" tabindex="-1" role="dialog">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Добавление прихода</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>

			<div class="modal-body" style="display: flex;flex-flow: column;">
			</div>

			<div class="modal-footer">
				<button type="button" class="btn btn-primary add-incoming-modal_save">Сохранить</button>
				<button type="button" class="btn btn-outline-dark modal-close" data-dismiss="modal">Закрыть</button>
			</div>
		</div>
	</div>
</div>

<script src="~/js/notchOrder.js" asp-append-version="true"></script>
<style>
	.center-items {
		display: flex;
		justify-content: center;
		align-items: center;
	}
</style>
