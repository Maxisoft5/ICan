@using ICan.Common.Models.Enums
@model ICan.Common.Models.Opt.FormatModel

@{ 
	var actionType = ActionType.Details;
	ActionType.TryParse(ViewData["ActionType"]?.ToString(), out actionType);
	bool.TryParse(ViewData["IsAdmin"].ToString(), out bool isAdmin);
	var header = actionType == ActionType.Details ? "Просмотр" : "Редактирование";
	ViewData["Title"] = header; 
}

<h2>@header</h2>

<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Edit">

			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="FormatId" />
			<div class="form-group">
				<label asp-for="Name" class="control-label"></label>
				<sup><i class="fas fa-asterisk" style="font-size: 10px; color: red"></i></sup>
				@if (actionType == ActionType.Details)
				{
	<input asp-for="Name" class="form-control" disabled /> }
				else
				{
	<input asp-for="Name" class="form-control" />}
				<span asp-validation-for="Name" class="text-danger"></span>
			</div>


			<div class="form-group">
				<label asp-for="Description" class="control-label"></label>
				@if (actionType == ActionType.Details)
				{
	@Html.TextAreaFor(model => model.Description,
		   new { @class = "form-control", disabled = "disabled", rows = 5 }) }
				else
				{
	@Html.TextAreaFor(model => model.Description,
		 new { @class = "form-control", rows = 5 })}
				<span asp-validation-for="Description" class="text-danger"></span>
			</div>
			@if (actionType == ActionType.Edition)
			{
<div class="form-group">
	<input type="submit" value="Сохранить" class="btn btn-default" />
</div>}
		</form>
	</div>
</div>

<div>
	<a asp-action="Index">Назад к списку</a>
</div>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
